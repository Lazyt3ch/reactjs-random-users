[{"E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Components\\UserGrid\\UsersGrid.js":"1","E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Helpers\\BadDataChecker.js":"2","E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Components\\UserGrid\\UsersGridItem.js":"3","E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Components\\Home\\Home.js":"4","E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Helpers\\UrlBuilder.js":"5","E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Components\\Nav\\Nav.js":"6","E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Components\\Fetcher\\Fetcher.js":"7","E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Helpers\\UsersFetcher.js":"8","E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Components\\Fetcher\\FetcherLaunch.js":"9","E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\constants.js":"10","E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Helpers\\PropertiesFixer.js":"11","E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\App.js":"12","E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\reportWebVitals.js":"13","E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Components\\Fetcher\\FetcherProperties.js":"14","E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Helpers\\DataRebuilder.js":"15","E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Components\\Fetcher\\FetcherNumResults.js":"16","E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\index.js":"17","E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Helpers\\GridCalculator.js":"18","E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Helpers\\NumResultsFixer.js":"19","E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Components\\Pagination\\Pagination.js":"20","E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Components\\Scroller\\Scroller.js":"21"},{"size":6165,"mtime":1607948207069,"results":"22","hashOfConfig":"23"},{"size":377,"mtime":1607492064649,"results":"24","hashOfConfig":"23"},{"size":3616,"mtime":1607948425316,"results":"25","hashOfConfig":"23"},{"size":1158,"mtime":1607497219257,"results":"26","hashOfConfig":"23"},{"size":796,"mtime":1606801917349,"results":"27","hashOfConfig":"23"},{"size":949,"mtime":1607939193906,"results":"28","hashOfConfig":"23"},{"size":1532,"mtime":1607925255441,"results":"29","hashOfConfig":"23"},{"size":1050,"mtime":1607926774741,"results":"30","hashOfConfig":"23"},{"size":2355,"mtime":1607931584168,"results":"31","hashOfConfig":"23"},{"size":1910,"mtime":1607586156066,"results":"32","hashOfConfig":"23"},{"size":1097,"mtime":1607060120287,"results":"33","hashOfConfig":"23"},{"size":3731,"mtime":1608007257620,"results":"34","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"23"},{"size":3126,"mtime":1607580248693,"results":"36","hashOfConfig":"23"},{"size":3115,"mtime":1607503147736,"results":"37","hashOfConfig":"23"},{"size":1313,"mtime":1607496894695,"results":"38","hashOfConfig":"23"},{"size":500,"mtime":499162500000,"results":"39","hashOfConfig":"23"},{"size":1558,"mtime":1607410444056,"results":"40","hashOfConfig":"23"},{"size":852,"mtime":1606976742243,"results":"41","hashOfConfig":"23"},{"size":2516,"mtime":1607948373495,"results":"42","hashOfConfig":"23"},{"size":1326,"mtime":1608007383536,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},"1mj7g7x",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Components\\UserGrid\\UsersGrid.js",["89"],"import React, {useState, useEffect} from \"react\";\r\nimport getRebuiltResults, {getBriefResults} from \"../../Helpers/DataRebuilder.js\";\r\nimport getGridColumnsFormula from \"../../Helpers/GridCalculator.js\";\r\nimport isBadData from \"../../Helpers/BadDataChecker.js\";\r\nimport UsersGridItem from \"./UsersGridItem.js\";\r\nimport Pagination from \"../Pagination/Pagination.js\";\r\nimport constants from \"../../constants.js\";\r\n\r\n// import {useLocation} from \"react-router-dom\";\r\n\r\nfunction UsersGrid(props) {\r\n  const {\r\n    results,\r\n    // resultsFetchCount,\r\n\r\n    results2D,\r\n    setResults2D,\r\n\r\n    briefResults2D,\r\n    setBriefResults2D,\r\n\r\n    validPropertiesCopy,\r\n    \r\n    gridColumnsFormula,\r\n    setGridColumnsFormula,\r\n\r\n    briefGridColumnsFormula,\r\n    setBriefGridColumnsFormula,\r\n    \r\n    isBriefResults, \r\n    setIsBriefResults,\r\n\r\n    activePageNumber, \r\n    setActivePageNumber,\r\n\r\n    totalPages, \r\n    setTotalPages,\r\n\r\n    scrollTop, \r\n    setScrollTop,\r\n\r\n  } = props;\r\n\r\n  const [activePageRows, setActivePageRows] = useState([]);\r\n\r\n  useEffect( () => {\r\n    if (isBadData(results, validPropertiesCopy)) {\r\n      return;\r\n    }\r\n\r\n    const results2DNew = results.length > 1\r\n      ? getRebuiltResults(results, validPropertiesCopy)\r\n      : [];\r\n    // console.log(\"results2DNew =\", results2DNew);\r\n\r\n    if (!isBadData(results2DNew) && results2DNew.length) {\r\n      setResults2D(results2DNew);\r\n    }\r\n  }, [results, validPropertiesCopy, setResults2D, setActivePageNumber]);\r\n\r\n  useEffect( () => {\r\n    if (isBadData(results2D, validPropertiesCopy)) {\r\n      return;\r\n    }\r\n\r\n    const getActivePageRows = (allResults) => {\r\n      if (!totalPages || !allResults || !Array.isArray(allResults) || !allResults.length) {\r\n        return [];\r\n      }\r\n  \r\n      const {usersPerPage} = constants;\r\n  \r\n      // Row 0 is used for table header, so content rows numbering starts from 1\r\n      const contentRowsStart = (activePageNumber * usersPerPage) + 1;\r\n      const contentRowsEnd = contentRowsStart + usersPerPage;\r\n      const activePageRowsNew = [ allResults[0] ].concat(\r\n        allResults.slice(contentRowsStart, contentRowsEnd + 1) );\r\n      // console.log(\"activePageRowsNew =\", activePageRowsNew);\r\n      \r\n      return activePageRowsNew;\r\n    }    \r\n\r\n    if (!isBadData(results2D) && results2D.length) {\r\n      const {usersPerPage} = constants;\r\n\r\n      // Row 0 is used for table header, so content rows numbering starts from 1\r\n      const totalUsers = results2D.length - 1;\r\n      // console.log(\"totalUsers =\", totalUsers);\r\n\r\n      if (Number.isInteger(usersPerPage) && usersPerPage > 0) {\r\n        const totalPagesNew = Math.ceil(totalUsers / usersPerPage);\r\n        setTotalPages(totalPagesNew);  \r\n        const activePageRowsNew = getActivePageRows(results2D);\r\n        setActivePageRows(activePageRowsNew);\r\n      }\r\n    }\r\n  }, [results2D, validPropertiesCopy, setTotalPages, activePageNumber, totalPages]);\r\n\r\n  useEffect( () => {\r\n    if (isBadData(activePageRows, validPropertiesCopy)) {\r\n      return;\r\n    }\r\n        \r\n    const briefResults2DNew = activePageRows.length > 1\r\n      ? getBriefResults(activePageRows, validPropertiesCopy)\r\n      : [];\r\n\r\n    if (!isBadData(briefResults2DNew) && briefResults2DNew.length) {\r\n      setBriefResults2D(briefResults2DNew);\r\n    }      \r\n  }, [activePageRows, validPropertiesCopy, setBriefResults2D]);\r\n\r\n  useEffect( () => {\r\n    if (isBadData(activePageRows, validPropertiesCopy)) {\r\n      return;\r\n    }\r\n\r\n    const gridColumnsFormulaNew = activePageRows.length > 1\r\n      ? getGridColumnsFormula(activePageRows, validPropertiesCopy)\r\n      : \"\";\r\n    \r\n    if (gridColumnsFormulaNew) {\r\n      setGridColumnsFormula(gridColumnsFormulaNew);\r\n    }\r\n  }, [activePageRows, validPropertiesCopy, setGridColumnsFormula]);\r\n  \r\n  useEffect( () => {\r\n    if (isBadData(briefResults2D, validPropertiesCopy)) {\r\n      return;\r\n    }\r\n\r\n    const briefGridColumnsFormulaNew = briefResults2D.length > 1\r\n      ? getGridColumnsFormula(briefResults2D, validPropertiesCopy)\r\n      : \"\";\r\n\r\n    if (briefGridColumnsFormulaNew) {\r\n      setBriefGridColumnsFormula(briefGridColumnsFormulaNew);\r\n    }\r\n  }, [briefResults2D, validPropertiesCopy, setBriefGridColumnsFormula]);\r\n\r\n  function handleBriefResultsChange(event) {\r\n    setIsBriefResults(event.target.checked);    \r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div className=\"users-view-top-wrapper\"> \r\n        <Pagination \r\n          totalPages={totalPages} \r\n\r\n          activePageNumber={activePageNumber} \r\n          setActivePageNumber={setActivePageNumber}    \r\n\r\n          // scrollTop={scrollTop}\r\n          setScrollTop={setScrollTop}\r\n        />\r\n\r\n        <div className=\"grid-settings\">\r\n          <input type=\"checkbox\" \r\n            id=\"brief-checkbox\"\r\n            name=\"brief-checkbox\"\r\n            checked={isBriefResults}           \r\n            onChange={handleBriefResultsChange}\r\n          />\r\n          <label htmlFor=\"brief-checkbox\" \r\n            style={{display: \"inline\", paddingLeft: \".3rem\", paddingBottom: \"1rem\"}}>\r\n            Hide subproperty names\r\n          </label>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"grid-container-wrapper\">\r\n        <div className=\"grid-container\" id=\"users-grid-container\"\r\n          style={{gridTemplateColumns: \r\n            isBriefResults\r\n              ? briefGridColumnsFormula\r\n              : gridColumnsFormula\r\n          }}\r\n        >\r\n          {activePageRows && activePageRows.length > 1\r\n            ? activePageRows.map( (userObj, rowIndex) => \r\n              <React.Fragment key={rowIndex}>\r\n                {Object.values(userObj).map( value => \r\n                  <UsersGridItem \r\n                    key={value} \r\n                    value={value}\r\n                    rowIndex={rowIndex}\r\n                    isBriefResults={isBriefResults}\r\n                    style={rowIndex === 0 ? {fontWeight: 700} : null}              \r\n                  />\r\n                )}\r\n              </React.Fragment>\r\n              )                \r\n            : \"\"\r\n          }\r\n        </div>      \r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UsersGrid;",["90","91"],"E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Helpers\\BadDataChecker.js",[],"E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Components\\UserGrid\\UsersGridItem.js",[],"E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Components\\Home\\Home.js",[],"E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Helpers\\UrlBuilder.js",[],"E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Components\\Nav\\Nav.js",[],"E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Components\\Fetcher\\Fetcher.js",[],"E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Helpers\\UsersFetcher.js",[],"E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Components\\Fetcher\\FetcherLaunch.js",[],"E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\constants.js",[],"E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Helpers\\PropertiesFixer.js",[],["92","93"],"E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\App.js",[],"E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\reportWebVitals.js",[],"E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Components\\Fetcher\\FetcherProperties.js",[],"E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Helpers\\DataRebuilder.js",[],"E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Components\\Fetcher\\FetcherNumResults.js",[],"E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\index.js",[],"E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Helpers\\GridCalculator.js",[],"E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Helpers\\NumResultsFixer.js",[],"E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Components\\Pagination\\Pagination.js",[],"E:\\PROGGER\\PROJECTS\\Rashid\\reactjs-random-users\\src\\Components\\Scroller\\Scroller.js",["94"],{"ruleId":"95","severity":1,"message":"96","line":39,"column":5,"nodeType":"97","messageId":"98","endLine":39,"endColumn":14},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"99","replacedBy":"103"},{"ruleId":"101","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":23,"column":6,"nodeType":"107","endLine":23,"endColumn":16,"suggestions":"108"},"no-unused-vars","'scrollTop' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["109"],"no-negated-in-lhs",["110"],["109"],["110"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'scrollTop'. Either include it or remove the dependency array.","ArrayExpression",["111"],"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},"Update the dependencies array to be: [pathname, scrollTop]",{"range":"114","text":"115"},[603,613],"[pathname, scrollTop]"]